name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Run golangci-lint with reviewdog
      uses: reviewdog/action-golangci-lint@v1.1.3
      with:
        # GITHUB_TOKEN.
        github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build
      run: make build_local

    
    - name: Build Darwin
      run: make artifact_darwin
    - name: Upload Darwin
      uses: actions/upload-artifact@v1
      with:
        name: compagnyhelper-darwin
        path: compagnyhelper-darwin
  
    - name: Build Linux
      run: make artifact_linux
    - name: Upload Darwin
      uses: actions/upload-artifact@v1
      with:
        name: compagnyhelper-linux
        path: compagnyhelper-linux

  Docker:
    name: Pubish Docker
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Run golangci-lint with reviewdog
      uses: reviewdog/action-golangci-lint@v1.1.3
      with:
        # GITHUB_TOKEN.
        github_token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Publish Docker
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: jsenon/compagnyhelper
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        dockerfile: build/Dockerfile          



